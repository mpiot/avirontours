name: CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          ini-values: date.timezone = Europe/Paris

      - name: Composer validate
        run: composer validate

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/composer/files
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Upload vendor
        uses: actions/upload-artifact@v2
        with:
          name: vendor
          path: vendor/
          if-no-files-found: error
          retention-days: 1

  lint:
    name: Lint
    needs: prepare
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download vendor
        uses: actions/download-artifact@v2
        with:
          name: vendor

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          ini-values: date.timezone = Europe/Paris

      - name: Install PHP CS fixer
        run: |
          wget https://cs.symfony.com/download/php-cs-fixer-v2.phar -O php-cs-fixer
          sudo chmod a+x php-cs-fixer
          sudo mv php-cs-fixer /usr/local/bin/php-cs-fixer

      - name: Lint
        run: |
          php-cs-fixer fix --diff --dry-run --no-interaction -v
          bin/console lint:yaml config --parse-tags config
          bin/console lint:twig templates --env=prod
          bin/console lint:container

      - name: Verify schema
        run: bin/console doctrine:schema:validate --skip-sync -vvv --no-interaction

      - name: Cache security-checked vulnerabilities db
        uses: actions/cache@v2
        with:
          path: ~/.symfony/cache
          key: security-checker-vulns-db

      - uses: symfonycorp/security-checker-action@v1

  tests:
    name: Tests
    needs: prepare
    runs-on: ubuntu-latest

    env:
      APP_ENV: "test"
      DATABASE_URL: "pgsql://postgres:postgres@localhost:5432/postgres"

    services:
      postgres:
        image: postgres:11.10
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download vendor
        uses: actions/download-artifact@v2
        with:
          name: vendor

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          ini-values: date.timezone = Europe/Paris

      - name: Install node modules
        run: |
          yarn install

      - name: Build assets
        run: |
          yarn build

      - name: Update database
        run: bin/console doctrine:migrations:migrate -n

      - name: Run fixtures
        run: bin/console doctrine:migrations:migrate -n

      - name: Clear the test cache
        run: bin/console cache:clear --env test

      - name: Run test suite
        run: SYMFONY_DEPRECATIONS_HELPER=disabled bin/phpunit --coverage-clover coverage-report.xml --log-junit tests-report.xml

      - name: Upload PHPUnit Reports
        uses: actions/upload-artifact@v2
        with:
          name: phpunit-reports
          path: |
            coverage-report.xml
            tests-report.xml
          retention-days: 1

  sonarcloud:
    name: SonarCloud
    needs: tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Download PHPUnit Reports
        uses: actions/download-artifact@v2
        with:
          name: phpunit-reports

      - name: Change Paths from PHPUnit reports
        run: sed -i 's/\/home\/runner\/work\/avirontours\/avirontours/\/github\/workspace/g' coverage-report.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
